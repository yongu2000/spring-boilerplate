plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.epages.restdocs-api-spec' version '0.19.4'
}

group = 'com.boilerplate'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // SPRING
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    compileOnly 'org.projectlombok:lombok'
    // DB
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // Lombok
    annotationProcessor 'org.projectlombok:lombok'
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // API 명세
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.4'
}

openapi3 {
    servers = [
            { url = 'http://localhost:8080' },
//            { url = 'http://production-api-server-url.com' }
    ]
    title = 'Boilerplate API'
    description = 'Boilerplate API description'
    version = '1.0.0'
    format = 'json'
    outputFileNamePrefix = 'openapi3'
    outputDirectory = file("build/api-spec") // openapi3.json 생성 경로
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated"
}

sourceSets {
    main {
        java.srcDirs("build/generated/sources/annotationProcessor/java/main")
    }
}

tasks.register('copyOpenApiSpec', Copy) {
    dependsOn 'openapi3'
    from 'build/api-spec/openapi3.json'
    into 'src/main/resources/static/docs'
}

clean {
    delete file('build/generated/sources/annotationProcessor/java/main')
}

tasks.named('test') {
    useJUnitPlatform()
}